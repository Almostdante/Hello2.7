#test = [3453, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554]
xch = 0
test = []
f = open('IntegerArray.txt')
for line in f:
    line.strip()
    test.append(int(line))
#test = [10, 8, 6, 4, 2, 1]
#test = [3453, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554, 34534, 23, 2222, 345363, 34664, 56757, 45345, 567567, 35, 2, 2, 22, 35345, 46456456456546456, 456456, 5, 394, 45, 34346, 5, 5756554]
print len(test)
def m_sort(x):
    global xch
    if len(x) < 2:
        return x
    x1 = m_sort(x[:len(x)/2])
    x2 = m_sort(x[len(x)/2:])
    sorted_x = []
    while len(x1) > 0 or len(x2) > 0:
        if len(x1) > 0 and len(x2) > 0:
            if x1[0] < x2[0]:
                sorted_x.append(x1[0])
                x1.pop(0)
            else:
                sorted_x.append(x2[0])
                x2.pop(0)
                xch += len(x1)
        else:
            sorted_x = sorted_x + x1 + x2
            break
    return sorted_x
m_sort(test)
print xch

